{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = exports.GooglePlacesAutocomplete = exports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.debounce\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _qs = _interopRequireDefault(require(\"qs\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"/Users/abbieyip/Desktop/save-our-women/node_modules/react-native-google-places-autocomplete/GooglePlacesAutocomplete.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WINDOW = _reactNative.Dimensions.get('window');\n\nvar defaultStyles = {\n  container: {\n    flex: 1\n  },\n  textInputContainer: {\n    backgroundColor: '#C9C9CE',\n    height: 44,\n    borderTopColor: '#7e7e7e',\n    borderBottomColor: '#b5b5b5',\n    borderTopWidth: 1 / _reactNative.PixelRatio.get(),\n    borderBottomWidth: 1 / _reactNative.PixelRatio.get(),\n    flexDirection: 'row'\n  },\n  textInput: {\n    backgroundColor: '#FFFFFF',\n    height: 28,\n    borderRadius: 5,\n    paddingTop: 4.5,\n    paddingBottom: 4.5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    marginTop: 7.5,\n    marginLeft: 8,\n    marginRight: 8,\n    fontSize: 15,\n    flex: 1\n  },\n  poweredContainer: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    backgroundColor: '#FFFFFF'\n  },\n  powered: {},\n  listView: {},\n  row: {\n    padding: 13,\n    height: 44,\n    flexDirection: 'row'\n  },\n  separator: {\n    height: _reactNative.StyleSheet.hairlineWidth,\n    backgroundColor: '#c8c7cc'\n  },\n  description: {},\n  loader: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    height: 20\n  }\n};\n\nvar GooglePlacesAutocomplete = function (_Component) {\n  (0, _inherits2.default)(GooglePlacesAutocomplete, _Component);\n\n  var _super = _createSuper(GooglePlacesAutocomplete);\n\n  function GooglePlacesAutocomplete(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, GooglePlacesAutocomplete);\n    _this = _super.call(this, props);\n    _this._isMounted = false;\n    _this._results = [];\n    _this._requests = [];\n\n    _this.getInitialState = function () {\n      return {\n        text: _this.props.getDefaultValue(),\n        dataSource: _this.buildRowsFromResults([]),\n        listViewDisplayed: _this.props.listViewDisplayed === 'auto' ? false : _this.props.listViewDisplayed,\n        url: _this.getRequestUrl(_this.props.requestUrl)\n      };\n    };\n\n    _this.getRequestUrl = function (requestUrl) {\n      if (requestUrl) {\n        if (requestUrl.useOnPlatform === 'all') {\n          return requestUrl.url;\n        }\n\n        if (requestUrl.useOnPlatform === 'web') {\n          return _reactNative.Platform.select({\n            web: requestUrl.url,\n            default: 'https://maps.googleapis.com/maps/api'\n          });\n        }\n      } else {\n        return 'https://maps.googleapis.com/maps/api';\n      }\n    };\n\n    _this.requestShouldUseWithCredentials = function () {\n      return _this.state.url === 'https://maps.googleapis.com/maps/api';\n    };\n\n    _this.hasNavigator = function () {\n      if (navigator && navigator.geolocation) {\n        return true;\n      } else {\n        console.warn('If you are using React Native v0.60.0+ you must follow these instructions to enable currentLocation: https://git.io/Jf4AR');\n        return false;\n      }\n    };\n\n    _this.setAddressText = function (address) {\n      return _this.setState({\n        text: address\n      });\n    };\n\n    _this.getAddressText = function () {\n      return _this.state.text;\n    };\n\n    _this.buildRowsFromResults = function (results) {\n      var res = [];\n\n      if (results.length === 0 || _this.props.predefinedPlacesAlwaysVisible === true) {\n        res = (0, _toConsumableArray2.default)(_this.props.predefinedPlaces.filter(function (place) {\n          return place.description && place.description.length;\n        }));\n\n        if (_this.props.currentLocation === true && _this.hasNavigator()) {\n          res.unshift({\n            description: _this.props.currentLocationLabel,\n            isCurrentLocation: true\n          });\n        }\n      }\n\n      res = res.map(function (place) {\n        return _objectSpread(_objectSpread({}, place), {}, {\n          isPredefinedPlace: true\n        });\n      });\n      return [].concat((0, _toConsumableArray2.default)(res), (0, _toConsumableArray2.default)(results));\n    };\n\n    _this._abortRequests = function () {\n      _this._requests.map(function (i) {\n        return i.abort();\n      });\n\n      _this._requests = [];\n    };\n\n    _this.triggerFocus = function () {\n      if (_this.refs.textInput) _this.refs.textInput.focus();\n    };\n\n    _this.triggerBlur = function () {\n      if (_this.refs.textInput) _this.refs.textInput.blur();\n    };\n\n    _this.getCurrentLocation = function () {\n      var options = {\n        enableHighAccuracy: false,\n        timeout: 20000,\n        maximumAge: 1000\n      };\n\n      if (_this.props.enableHighAccuracyLocation && _reactNative.Platform.OS === 'android') {\n        options = {\n          enableHighAccuracy: true,\n          timeout: 20000\n        };\n      }\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        if (_this.props.nearbyPlacesAPI === 'None') {\n          var currentLocation = {\n            description: _this.props.currentLocationLabel,\n            geometry: {\n              location: {\n                lat: position.coords.latitude,\n                lng: position.coords.longitude\n              }\n            }\n          };\n\n          _this._disableRowLoaders();\n\n          _this.props.onPress(currentLocation, currentLocation);\n        } else {\n          _this._requestNearby(position.coords.latitude, position.coords.longitude);\n        }\n      }, function (error) {\n        _this._disableRowLoaders();\n\n        alert(error.message);\n      }, options);\n    };\n\n    _this._onPress = function (rowData) {\n      if (rowData.isPredefinedPlace !== true && _this.props.fetchDetails === true) {\n        if (rowData.isLoading === true) {\n          return;\n        }\n\n        _reactNative.Keyboard.dismiss();\n\n        _this._abortRequests();\n\n        _this._enableRowLoader(rowData);\n\n        var request = new XMLHttpRequest();\n\n        _this._requests.push(request);\n\n        request.timeout = _this.props.timeout;\n        request.ontimeout = _this.props.onTimeout;\n\n        request.onreadystatechange = function () {\n          if (request.readyState !== 4) return;\n\n          if (request.status === 200) {\n            var responseJSON = JSON.parse(request.responseText);\n\n            if (responseJSON.status === 'OK') {\n              if (_this._isMounted === true) {\n                var details = responseJSON.result;\n\n                _this._disableRowLoaders();\n\n                _this._onBlur();\n\n                _this.setState({\n                  text: _this._renderDescription(rowData)\n                });\n\n                delete rowData.isLoading;\n\n                _this.props.onPress(rowData, details);\n              }\n            } else {\n              _this._disableRowLoaders();\n\n              if (_this.props.autoFillOnNotFound) {\n                _this.setState({\n                  text: _this._renderDescription(rowData)\n                });\n\n                delete rowData.isLoading;\n              }\n\n              if (!_this.props.onNotFound) {\n                console.warn('google places autocomplete: ' + responseJSON.status);\n              } else {\n                _this.props.onNotFound(responseJSON);\n              }\n            }\n          } else {\n            _this._disableRowLoaders();\n\n            if (!_this.props.onFail) {\n              console.warn('google places autocomplete: request could not be completed or has been aborted');\n            } else {\n              _this.props.onFail('request could not be completed or has been aborted');\n            }\n          }\n        };\n\n        request.open('GET', _this.state.url + \"/place/details/json?\" + _qs.default.stringify(_objectSpread({\n          key: _this.props.query.key,\n          placeid: rowData.place_id,\n          language: _this.props.query.language\n        }, _this.props.GooglePlacesDetailsQuery)));\n        request.withCredentials = _this.requestShouldUseWithCredentials();\n        request.send();\n      } else if (rowData.isCurrentLocation === true) {\n        _this._enableRowLoader(rowData);\n\n        _this.setState({\n          text: _this._renderDescription(rowData)\n        });\n\n        delete rowData.isLoading;\n\n        _this.getCurrentLocation();\n      } else {\n        _this.setState({\n          text: _this._renderDescription(rowData)\n        });\n\n        _this._onBlur();\n\n        delete rowData.isLoading;\n\n        var predefinedPlace = _this._getPredefinedPlace(rowData);\n\n        _this.props.onPress(predefinedPlace, predefinedPlace);\n      }\n    };\n\n    _this._enableRowLoader = function (rowData) {\n      var rows = _this.buildRowsFromResults(_this._results);\n\n      for (var i = 0; i < rows.length; i++) {\n        if (rows[i].place_id === rowData.place_id || rows[i].isCurrentLocation === true && rowData.isCurrentLocation === true) {\n          rows[i].isLoading = true;\n\n          _this.setState({\n            dataSource: rows\n          });\n\n          break;\n        }\n      }\n    };\n\n    _this._disableRowLoaders = function () {\n      if (_this._isMounted === true) {\n        for (var i = 0; i < _this._results.length; i++) {\n          if (_this._results[i].isLoading === true) {\n            _this._results[i].isLoading = false;\n          }\n        }\n\n        _this.setState({\n          dataSource: _this.buildRowsFromResults(_this._results)\n        });\n      }\n    };\n\n    _this._getPredefinedPlace = function (rowData) {\n      if (rowData.isPredefinedPlace !== true) {\n        return rowData;\n      }\n\n      for (var i = 0; i < _this.props.predefinedPlaces.length; i++) {\n        if (_this.props.predefinedPlaces[i].description === rowData.description) {\n          return _this.props.predefinedPlaces[i];\n        }\n      }\n\n      return rowData;\n    };\n\n    _this._filterResultsByTypes = function (unfilteredResults, types) {\n      if (types.length === 0) return unfilteredResults;\n      var results = [];\n\n      for (var i = 0; i < unfilteredResults.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < types.length; j++) {\n          if (unfilteredResults[i].types.indexOf(types[j]) !== -1) {\n            found = true;\n            break;\n          }\n        }\n\n        if (found === true) {\n          results.push(unfilteredResults[i]);\n        }\n      }\n\n      return results;\n    };\n\n    _this._requestNearby = function (latitude, longitude) {\n      _this._abortRequests();\n\n      if (latitude !== undefined && longitude !== undefined && latitude !== null && longitude !== null) {\n        var request = new XMLHttpRequest();\n\n        _this._requests.push(request);\n\n        request.timeout = _this.props.timeout;\n        request.ontimeout = _this.props.onTimeout;\n\n        request.onreadystatechange = function () {\n          if (request.readyState !== 4) {\n            return;\n          }\n\n          if (request.status === 200) {\n            var responseJSON = JSON.parse(request.responseText);\n\n            _this._disableRowLoaders();\n\n            if (typeof responseJSON.results !== 'undefined') {\n              if (_this._isMounted === true) {\n                var results = [];\n\n                if (_this.props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n                  results = _this._filterResultsByTypes(responseJSON.results, _this.props.filterReverseGeocodingByTypes);\n                } else {\n                  results = responseJSON.results;\n                }\n\n                _this.setState({\n                  dataSource: _this.buildRowsFromResults(results)\n                });\n              }\n            }\n\n            if (typeof responseJSON.error_message !== 'undefined') {\n              if (!_this.props.onFail) console.warn('google places autocomplete: ' + responseJSON.error_message);else {\n                _this.props.onFail(responseJSON.error_message);\n              }\n            }\n          } else {}\n        };\n\n        var url = '';\n\n        if (_this.props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n          url = _this.state.url + \"/geocode/json?\" + _qs.default.stringify(_objectSpread({\n            latlng: latitude + ',' + longitude,\n            key: _this.props.query.key\n          }, _this.props.GoogleReverseGeocodingQuery));\n        } else {\n          url = _this.state.url + \"/place/nearbysearch/json?\" + _qs.default.stringify(_objectSpread({\n            location: latitude + ',' + longitude,\n            key: _this.props.query.key\n          }, _this.props.GooglePlacesSearchQuery));\n        }\n\n        request.open('GET', url);\n        request.withCredentials = _this.requestShouldUseWithCredentials();\n        request.send();\n      } else {\n        _this._results = [];\n\n        _this.setState({\n          dataSource: _this.buildRowsFromResults([])\n        });\n      }\n    };\n\n    _this._request = function (text) {\n      _this._abortRequests();\n\n      if (_this.supportedPlatform() && text && text.length >= _this.props.minLength) {\n        var request = new XMLHttpRequest();\n\n        _this._requests.push(request);\n\n        request.timeout = _this.props.timeout;\n        request.ontimeout = _this.props.onTimeout;\n\n        request.onreadystatechange = function () {\n          if (request.readyState !== 4) {\n            return;\n          }\n\n          if (request.status === 200) {\n            var responseJSON = JSON.parse(request.responseText);\n\n            if (typeof responseJSON.predictions !== 'undefined') {\n              if (_this._isMounted === true) {\n                var results = _this.props.nearbyPlacesAPI === 'GoogleReverseGeocoding' ? _this._filterResultsByTypes(responseJSON.predictions, _this.props.filterReverseGeocodingByTypes) : responseJSON.predictions;\n                _this._results = results;\n\n                _this.setState({\n                  dataSource: _this.buildRowsFromResults(results)\n                });\n              }\n            }\n\n            if (typeof responseJSON.error_message !== 'undefined') {\n              if (!_this.props.onFail) console.warn('google places autocomplete: ' + responseJSON.error_message);else {\n                _this.props.onFail(responseJSON.error_message);\n              }\n            }\n          } else {}\n        };\n\n        if (_this.props.preProcess) {\n          text = _this.props.preProcess(text);\n        }\n\n        request.open('GET', _this.state.url + \"/place/autocomplete/json?&input=\" + encodeURIComponent(text) + '&' + _qs.default.stringify(_this.props.query));\n        request.withCredentials = _this.requestShouldUseWithCredentials();\n        request.send();\n      } else {\n        _this._results = [];\n\n        _this.setState({\n          dataSource: _this.buildRowsFromResults([])\n        });\n      }\n    };\n\n    _this._onChangeText = function (text) {\n      _this._request(text);\n\n      _this.setState({\n        text: text,\n        listViewDisplayed: _this._isMounted || _this.props.autoFocus\n      });\n    };\n\n    _this._handleChangeText = function (text) {\n      _this._onChangeText(text);\n\n      var onChangeText = _this.props && _this.props.textInputProps && _this.props.textInputProps.onChangeText;\n\n      if (onChangeText) {\n        onChangeText(text);\n      }\n    };\n\n    _this._renderRowData = function (rowData) {\n      if (_this.props.renderRow) {\n        return _this.props.renderRow(rowData);\n      }\n\n      return _react.default.createElement(_reactNative.Text, {\n        style: [_this.props.suppressDefaultStyles ? {} : defaultStyles.description, _this.props.styles.description, rowData.isPredefinedPlace ? _this.props.styles.predefinedPlacesDescription : {}],\n        numberOfLines: _this.props.numberOfLines,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 7\n        }\n      }, _this._renderDescription(rowData));\n    };\n\n    _this._renderDescription = function (rowData) {\n      if (_this.props.renderDescription) {\n        return _this.props.renderDescription(rowData);\n      }\n\n      return rowData.description || rowData.formatted_address || rowData.name;\n    };\n\n    _this._renderLoader = function (rowData) {\n      if (rowData.isLoading === true) {\n        return _react.default.createElement(_reactNative.View, {\n          style: [_this.props.suppressDefaultStyles ? {} : defaultStyles.loader, _this.props.styles.loader],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 9\n          }\n        }, _this._getRowLoader());\n      }\n\n      return null;\n    };\n\n    _this._renderRow = function () {\n      var rowData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var sectionID = arguments.length > 1 ? arguments[1] : undefined;\n      var rowID = arguments.length > 2 ? arguments[2] : undefined;\n      return _react.default.createElement(_reactNative.ScrollView, {\n        style: {\n          flex: 1\n        },\n        scrollEnabled: _this.props.isRowScrollable,\n        keyboardShouldPersistTaps: _this.props.keyboardShouldPersistTaps,\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        showsVerticalScrollIndicator: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: {\n          width: WINDOW.width\n        },\n        onPress: function onPress() {\n          return _this._onPress(rowData);\n        },\n        underlayColor: _this.props.listUnderlayColor || '#c8c7cc',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: [_this.props.suppressDefaultStyles ? {} : defaultStyles.row, _this.props.styles.row, rowData.isPredefinedPlace ? _this.props.styles.specialItemRow : {}],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 11\n        }\n      }, _this._renderLoader(rowData), _this._renderRowData(rowData))));\n    };\n\n    _this._renderSeparator = function (sectionID, rowID) {\n      if (rowID === _this.state.dataSource.length - 1) {\n        return null;\n      }\n\n      return _react.default.createElement(_reactNative.View, {\n        key: sectionID + \"-\" + rowID,\n        style: [_this.props.suppressDefaultStyles ? {} : defaultStyles.separator, _this.props.styles.separator],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this._onBlur = function () {\n      _this.triggerBlur();\n\n      _this.setState({\n        listViewDisplayed: false\n      });\n    };\n\n    _this._onFocus = function () {\n      return _this.setState({\n        listViewDisplayed: true\n      });\n    };\n\n    _this._renderPoweredLogo = function () {\n      if (!_this._shouldShowPoweredLogo()) {\n        return null;\n      }\n\n      return _react.default.createElement(_reactNative.View, {\n        style: [_this.props.suppressDefaultStyles ? {} : defaultStyles.row, defaultStyles.poweredContainer, _this.props.styles.poweredContainer],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: [_this.props.suppressDefaultStyles ? {} : defaultStyles.powered, _this.props.styles.powered],\n        resizeMode: \"contain\",\n        source: require('./images/powered_by_google_on_white.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    _this._shouldShowPoweredLogo = function () {\n      if (!_this.props.enablePoweredByContainer || _this.state.dataSource.length === 0) {\n        return false;\n      }\n\n      for (var i = 0; i < _this.state.dataSource.length; i++) {\n        var row = _this.state.dataSource[i];\n\n        if (!row.hasOwnProperty('isCurrentLocation') && !row.hasOwnProperty('isPredefinedPlace')) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    _this._renderLeftButton = function () {\n      if (_this.props.renderLeftButton) {\n        return _this.props.renderLeftButton();\n      }\n    };\n\n    _this._renderRightButton = function () {\n      if (_this.props.renderRightButton) {\n        return _this.props.renderRightButton();\n      }\n    };\n\n    _this._getFlatList = function () {\n      var keyGenerator = function keyGenerator() {\n        return Math.random().toString(36).substr(2, 10);\n      };\n\n      if (_this.supportedPlatform() && (_this.state.text !== '' || _this.props.predefinedPlaces.length || _this.props.currentLocation === true) && _this.state.listViewDisplayed === true) {\n        return _react.default.createElement(_reactNative.FlatList, (0, _extends2.default)({\n          scrollEnabled: !_this.props.disableScroll,\n          style: [_this.props.suppressDefaultStyles ? {} : defaultStyles.listView, _this.props.styles.listView],\n          data: _this.state.dataSource,\n          keyExtractor: keyGenerator,\n          extraData: [_this.state.dataSource, _this.props],\n          ItemSeparatorComponent: _this._renderSeparator,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _this._renderRow(item);\n          },\n          ListEmptyComponent: _this.state.text.length > _this.props.minLength && _this.props.listEmptyComponent,\n          ListHeaderComponent: _this.props.renderHeaderComponent && _this.props.renderHeaderComponent(_this.state.text),\n          ListFooterComponent: _this._renderPoweredLogo\n        }, _this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 9\n          }\n        }));\n      }\n\n      return null;\n    };\n\n    _this.state = _this.getInitialState.call((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(GooglePlacesAutocomplete, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this._request = this.props.debounce ? (0, _lodash.default)(this._request, this.props.debounce) : this._request;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._handleChangeText(this.state.text);\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      var listViewDisplayed = this.state.listViewDisplayed;\n\n      if (nextProps.listViewDisplayed !== 'auto') {\n        listViewDisplayed = nextProps.listViewDisplayed;\n      }\n\n      if (typeof nextProps.text !== 'undefined' && this.state.text !== nextProps.text) {\n        this.setState({\n          listViewDisplayed: listViewDisplayed\n        }, function () {\n          return _this2._handleChangeText(nextProps.text);\n        });\n      } else {\n        this.setState({\n          listViewDisplayed: listViewDisplayed\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.predefinedPlaces !== this.props.predefinedPlaces) {\n        this.setState({\n          dataSource: this.buildRowsFromResults(this._results)\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._abortRequests();\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"supportedPlatform\",\n    value: function supportedPlatform(from) {\n      if (_reactNative.Platform.OS === 'web' && !this.props.requestUrl) {\n        console.warn('This library cannot be used for the web unless you specify the requestUrl prop. See https://git.io/JflFv for more for details.');\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"clearText\",\n    value: function clearText() {\n      this.setState({\n        text: ''\n      });\n    }\n  }, {\n    key: \"_getRowLoader\",\n    value: function _getRowLoader() {\n      return _react.default.createElement(_reactNative.ActivityIndicator, {\n        animating: true,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props$textInput = this.props.textInputProps,\n          onFocus = _this$props$textInput.onFocus,\n          onBlur = _this$props$textInput.onBlur,\n          clearButtonMode = _this$props$textInput.clearButtonMode,\n          InputComp = _this$props$textInput.InputComp,\n          userProps = (0, _objectWithoutProperties2.default)(_this$props$textInput, [\"onFocus\", \"onBlur\", \"clearButtonMode\", \"InputComp\"]);\n      var TextInputComp = InputComp ? InputComp : _reactNative.TextInput;\n      return _react.default.createElement(_reactNative.View, {\n        style: [this.props.suppressDefaultStyles ? {} : defaultStyles.container, this.props.styles.container],\n        pointerEvents: \"box-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 7\n        }\n      }, !this.props.textInputHide && _react.default.createElement(_reactNative.View, {\n        style: [this.props.suppressDefaultStyles ? {} : defaultStyles.textInputContainer, this.props.styles.textInputContainer],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 11\n        }\n      }, this._renderLeftButton(), _react.default.createElement(TextInputComp, (0, _extends2.default)({\n        ref: \"textInput\",\n        editable: this.props.editable,\n        returnKeyType: this.props.returnKeyType,\n        keyboardAppearance: this.props.keyboardAppearance,\n        autoFocus: this.props.autoFocus,\n        style: [this.props.suppressDefaultStyles ? {} : defaultStyles.textInput, this.props.styles.textInput],\n        value: this.state.text,\n        placeholder: this.props.placeholder,\n        onSubmitEditing: this.props.onSubmitEditing,\n        placeholderTextColor: this.props.placeholderTextColor,\n        onFocus: onFocus ? function () {\n          _this3._onFocus();\n\n          onFocus();\n        } : this._onFocus,\n        onBlur: onBlur ? function () {\n          _this3._onBlur();\n\n          onBlur();\n        } : this._onBlur,\n        underlineColorAndroid: this.props.underlineColorAndroid,\n        clearButtonMode: clearButtonMode ? clearButtonMode : 'while-editing'\n      }, userProps, {\n        onChangeText: this._handleChangeText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 13\n        }\n      })), this._renderRightButton()), this._getFlatList(), this.props.children);\n    }\n  }]);\n  return GooglePlacesAutocomplete;\n}(_react.Component);\n\nexports.GooglePlacesAutocomplete = exports.default = GooglePlacesAutocomplete;\nGooglePlacesAutocomplete.propTypes = {\n  autoFillOnNotFound: _propTypes.default.bool,\n  autoFocus: _propTypes.default.bool,\n  currentLocation: _propTypes.default.bool,\n  currentLocationLabel: _propTypes.default.string,\n  debounce: _propTypes.default.number,\n  editable: _propTypes.default.bool,\n  enableHighAccuracyLocation: _propTypes.default.bool,\n  enablePoweredByContainer: _propTypes.default.bool,\n  fetchDetails: _propTypes.default.bool,\n  filterReverseGeocodingByTypes: _propTypes.default.array,\n  getDefaultValue: _propTypes.default.func,\n  GooglePlacesDetailsQuery: _propTypes.default.object,\n  GooglePlacesSearchQuery: _propTypes.default.object,\n  GoogleReverseGeocodingQuery: _propTypes.default.object,\n  isRowScrollable: _propTypes.default.bool,\n  keyboardAppearance: _propTypes.default.oneOf(['default', 'light', 'dark']),\n  listEmptyComponent: _propTypes.default.func,\n  listUnderlayColor: _propTypes.default.string,\n  minLength: _propTypes.default.number,\n  nearbyPlacesAPI: _propTypes.default.string,\n  numberOfLines: _propTypes.default.number,\n  onFail: _propTypes.default.func,\n  onNotFound: _propTypes.default.func,\n  onPress: _propTypes.default.func,\n  onSubmitEditing: _propTypes.default.func,\n  onTimeout: _propTypes.default.func,\n  placeholder: _propTypes.default.string,\n  placeholderTextColor: _propTypes.default.string,\n  predefinedPlaces: _propTypes.default.array,\n  predefinedPlacesAlwaysVisible: _propTypes.default.bool,\n  query: _propTypes.default.object,\n  renderDescription: _propTypes.default.func,\n  renderLeftButton: _propTypes.default.func,\n  renderRightButton: _propTypes.default.func,\n  renderRow: _propTypes.default.func,\n  requestUrl: _propTypes.default.shape({\n    url: _propTypes.default.string,\n    useOnPlatform: _propTypes.default.oneOf(['web', 'all'])\n  }),\n  returnKeyType: _propTypes.default.string,\n  styles: _propTypes.default.object,\n  suppressDefaultStyles: _propTypes.default.bool,\n  textInputHide: _propTypes.default.bool,\n  textInputProps: _propTypes.default.object,\n  timeout: _propTypes.default.number,\n  underlineColorAndroid: _propTypes.default.string\n};\nGooglePlacesAutocomplete.defaultProps = {\n  autoFillOnNotFound: false,\n  autoFocus: false,\n  currentLocation: false,\n  currentLocationLabel: 'Current location',\n  debounce: 0,\n  editable: true,\n  enableHighAccuracyLocation: true,\n  enablePoweredByContainer: true,\n  fetchDetails: false,\n  filterReverseGeocodingByTypes: [],\n  getDefaultValue: function getDefaultValue() {\n    return '';\n  },\n  GooglePlacesDetailsQuery: {},\n  GooglePlacesSearchQuery: {\n    rankby: 'distance',\n    type: 'restaurant'\n  },\n  GoogleReverseGeocodingQuery: {},\n  isRowScrollable: true,\n  keyboardAppearance: 'default',\n  keyboardShouldPersistTaps: 'always',\n  listViewDisplayed: 'auto',\n  minLength: 0,\n  nearbyPlacesAPI: 'GooglePlacesSearch',\n  numberOfLines: 1,\n  onFail: function onFail() {},\n  onNotFound: function onNotFound() {},\n  onSubmitEditing: function onSubmitEditing() {},\n  onPress: function onPress() {},\n  onTimeout: function onTimeout() {\n    return console.warn('google places autocomplete: request timeout');\n  },\n  placeholder: 'Search',\n  placeholderTextColor: '#A8A8A8',\n  predefinedPlaces: [],\n  predefinedPlacesAlwaysVisible: false,\n  query: {\n    key: 'missing api key',\n    language: 'en',\n    types: 'geocode'\n  },\n  returnKeyType: 'search',\n  styles: {},\n  suppressDefaultStyles: false,\n  textInputHide: false,\n  textInputProps: {},\n  timeout: 20000,\n  underlineColorAndroid: 'transparent'\n};\n\nvar create = function create() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return _react.default.createClass({\n    render: function render() {\n      return _react.default.createElement(GooglePlacesAutocomplete, (0, _extends2.default)({\n        ref: \"GooglePlacesAutocomplete\"\n      }, options, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 9\n        }\n      }));\n    }\n  });\n};\n\nexports.create = create;","map":{"version":3,"sources":["/Users/abbieyip/Desktop/save-our-women/node_modules/react-native-google-places-autocomplete/GooglePlacesAutocomplete.js"],"names":["WINDOW","Dimensions","get","defaultStyles","container","flex","textInputContainer","backgroundColor","height","borderTopColor","borderBottomColor","borderTopWidth","PixelRatio","borderBottomWidth","flexDirection","textInput","borderRadius","paddingTop","paddingBottom","paddingLeft","paddingRight","marginTop","marginLeft","marginRight","fontSize","poweredContainer","justifyContent","alignItems","powered","listView","row","padding","separator","StyleSheet","hairlineWidth","description","loader","GooglePlacesAutocomplete","props","_isMounted","_results","_requests","getInitialState","text","getDefaultValue","dataSource","buildRowsFromResults","listViewDisplayed","url","getRequestUrl","requestUrl","useOnPlatform","Platform","select","web","default","requestShouldUseWithCredentials","state","hasNavigator","navigator","geolocation","console","warn","setAddressText","address","setState","getAddressText","results","res","length","predefinedPlacesAlwaysVisible","predefinedPlaces","filter","place","currentLocation","unshift","currentLocationLabel","isCurrentLocation","map","isPredefinedPlace","_abortRequests","i","abort","triggerFocus","refs","focus","triggerBlur","blur","getCurrentLocation","options","enableHighAccuracy","timeout","maximumAge","enableHighAccuracyLocation","OS","getCurrentPosition","position","nearbyPlacesAPI","geometry","location","lat","coords","latitude","lng","longitude","_disableRowLoaders","onPress","_requestNearby","error","alert","message","_onPress","rowData","fetchDetails","isLoading","Keyboard","dismiss","_enableRowLoader","request","XMLHttpRequest","push","ontimeout","onTimeout","onreadystatechange","readyState","status","responseJSON","JSON","parse","responseText","details","result","_onBlur","_renderDescription","autoFillOnNotFound","onNotFound","onFail","open","Qs","stringify","key","query","placeid","place_id","language","GooglePlacesDetailsQuery","withCredentials","send","predefinedPlace","_getPredefinedPlace","rows","_filterResultsByTypes","unfilteredResults","types","found","j","indexOf","undefined","filterReverseGeocodingByTypes","error_message","latlng","GoogleReverseGeocodingQuery","GooglePlacesSearchQuery","_request","supportedPlatform","minLength","predictions","preProcess","encodeURIComponent","_onChangeText","autoFocus","_handleChangeText","onChangeText","textInputProps","_renderRowData","renderRow","suppressDefaultStyles","styles","predefinedPlacesDescription","numberOfLines","renderDescription","formatted_address","name","_renderLoader","_getRowLoader","_renderRow","sectionID","rowID","isRowScrollable","keyboardShouldPersistTaps","width","listUnderlayColor","specialItemRow","_renderSeparator","_onFocus","_renderPoweredLogo","_shouldShowPoweredLogo","require","enablePoweredByContainer","hasOwnProperty","_renderLeftButton","renderLeftButton","_renderRightButton","renderRightButton","_getFlatList","keyGenerator","Math","random","toString","substr","disableScroll","item","listEmptyComponent","renderHeaderComponent","call","debounce","nextProps","prevProps","from","onFocus","onBlur","clearButtonMode","InputComp","userProps","TextInputComp","TextInput","textInputHide","editable","returnKeyType","keyboardAppearance","placeholder","onSubmitEditing","placeholderTextColor","underlineColorAndroid","children","Component","propTypes","PropTypes","bool","string","number","array","func","object","oneOf","shape","defaultProps","rankby","type","create","React","createClass","render"],"mappings":"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","sourcesContent":["import debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport Qs from 'qs';\nimport React, { Component } from 'react';\nimport {\n  ActivityIndicator,\n  Dimensions,\n  FlatList,\n  Image,\n  Keyboard,\n  PixelRatio,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableHighlight,\n  View,\n} from 'react-native';\n\nconst WINDOW = Dimensions.get('window');\n\nconst defaultStyles = {\n  container: {\n    flex: 1,\n  },\n  textInputContainer: {\n    backgroundColor: '#C9C9CE',\n    height: 44,\n    borderTopColor: '#7e7e7e',\n    borderBottomColor: '#b5b5b5',\n    borderTopWidth: 1 / PixelRatio.get(),\n    borderBottomWidth: 1 / PixelRatio.get(),\n    flexDirection: 'row',\n  },\n  textInput: {\n    backgroundColor: '#FFFFFF',\n    height: 28,\n    borderRadius: 5,\n    paddingTop: 4.5,\n    paddingBottom: 4.5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    marginTop: 7.5,\n    marginLeft: 8,\n    marginRight: 8,\n    fontSize: 15,\n    flex: 1,\n  },\n  poweredContainer: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    backgroundColor: '#FFFFFF',\n  },\n  powered: {},\n  listView: {},\n  row: {\n    padding: 13,\n    height: 44,\n    flexDirection: 'row',\n  },\n  separator: {\n    height: StyleSheet.hairlineWidth,\n    backgroundColor: '#c8c7cc',\n  },\n  description: {},\n  loader: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    height: 20,\n  },\n};\n\nexport default class GooglePlacesAutocomplete extends Component {\n  _isMounted = false;\n  _results = [];\n  _requests = [];\n\n  constructor(props) {\n    super(props);\n    this.state = this.getInitialState.call(this);\n  }\n\n  getInitialState = () => ({\n    text: this.props.getDefaultValue(),\n    dataSource: this.buildRowsFromResults([]),\n    listViewDisplayed:\n      this.props.listViewDisplayed === 'auto'\n        ? false\n        : this.props.listViewDisplayed,\n    url: this.getRequestUrl(this.props.requestUrl),\n  });\n\n  getRequestUrl = (requestUrl) => {\n    if (requestUrl) {\n      if (requestUrl.useOnPlatform === 'all') {\n        return requestUrl.url;\n      }\n      if (requestUrl.useOnPlatform === 'web') {\n        return Platform.select({\n          web: requestUrl.url,\n          default: 'https://maps.googleapis.com/maps/api',\n        });\n      }\n    } else {\n      return 'https://maps.googleapis.com/maps/api';\n    }\n  };\n\n  requestShouldUseWithCredentials = () =>\n    this.state.url === 'https://maps.googleapis.com/maps/api';\n\n  hasNavigator = () => {\n    if (navigator && navigator.geolocation) {\n      return true;\n    } else {\n      console.warn(\n        'If you are using React Native v0.60.0+ you must follow these instructions to enable currentLocation: https://git.io/Jf4AR',\n      );\n      return false;\n    }\n  };\n\n  setAddressText = (address) => this.setState({ text: address });\n\n  getAddressText = () => this.state.text;\n\n  buildRowsFromResults = (results) => {\n    let res = [];\n\n    if (\n      results.length === 0 ||\n      this.props.predefinedPlacesAlwaysVisible === true\n    ) {\n      res = [\n        ...this.props.predefinedPlaces.filter(\n          (place) => place.description && place.description.length,\n        ),\n      ];\n\n      if (this.props.currentLocation === true && this.hasNavigator()) {\n        res.unshift({\n          description: this.props.currentLocationLabel,\n          isCurrentLocation: true,\n        });\n      }\n    }\n\n    res = res.map((place) => ({\n      ...place,\n      isPredefinedPlace: true,\n    }));\n\n    return [...res, ...results];\n  };\n\n  UNSAFE_componentWillMount() {\n    this._request = this.props.debounce\n      ? debounce(this._request, this.props.debounce)\n      : this._request;\n  }\n\n  componentDidMount() {\n    // This will load the default value's search results after the view has\n    // been rendered\n    this._handleChangeText(this.state.text);\n    this._isMounted = true;\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    let listViewDisplayed = this.state.listViewDisplayed;\n\n    if (nextProps.listViewDisplayed !== 'auto') {\n      listViewDisplayed = nextProps.listViewDisplayed;\n    }\n\n    if (\n      typeof nextProps.text !== 'undefined' &&\n      this.state.text !== nextProps.text\n    ) {\n      this.setState(\n        {\n          listViewDisplayed: listViewDisplayed,\n        },\n        () => this._handleChangeText(nextProps.text),\n      );\n    } else {\n      this.setState({\n        listViewDisplayed: listViewDisplayed,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.predefinedPlaces !== this.props.predefinedPlaces) {\n      this.setState({ dataSource: this.buildRowsFromResults(this._results) });\n    }\n  }\n\n  componentWillUnmount() {\n    this._abortRequests();\n    this._isMounted = false;\n  }\n\n  _abortRequests = () => {\n    this._requests.map((i) => i.abort());\n    this._requests = [];\n  };\n\n  supportedPlatform(from) {\n    if (Platform.OS === 'web' && !this.props.requestUrl) {\n      console.warn(\n        'This library cannot be used for the web unless you specify the requestUrl prop. See https://git.io/JflFv for more for details.',\n      );\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * This method is exposed to parent components to focus on textInput manually.\n   * @public\n   */\n  triggerFocus = () => {\n    if (this.refs.textInput) this.refs.textInput.focus();\n  };\n\n  /**\n   * This method is exposed to parent components to blur textInput manually.\n   * @public\n   */\n  triggerBlur = () => {\n    if (this.refs.textInput) this.refs.textInput.blur();\n  };\n\n  getCurrentLocation = () => {\n    let options = {\n      enableHighAccuracy: false,\n      timeout: 20000,\n      maximumAge: 1000,\n    };\n\n    if (this.props.enableHighAccuracyLocation && Platform.OS === 'android') {\n      options = {\n        enableHighAccuracy: true,\n        timeout: 20000,\n      };\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        if (this.props.nearbyPlacesAPI === 'None') {\n          let currentLocation = {\n            description: this.props.currentLocationLabel,\n            geometry: {\n              location: {\n                lat: position.coords.latitude,\n                lng: position.coords.longitude,\n              },\n            },\n          };\n\n          this._disableRowLoaders();\n          this.props.onPress(currentLocation, currentLocation);\n        } else {\n          this._requestNearby(\n            position.coords.latitude,\n            position.coords.longitude,\n          );\n        }\n      },\n      (error) => {\n        this._disableRowLoaders();\n        alert(error.message);\n      },\n      options,\n    );\n  };\n\n  _onPress = (rowData) => {\n    if (\n      rowData.isPredefinedPlace !== true &&\n      this.props.fetchDetails === true\n    ) {\n      if (rowData.isLoading === true) {\n        // already requesting\n        return;\n      }\n\n      Keyboard.dismiss();\n\n      this._abortRequests();\n\n      // display loader\n      this._enableRowLoader(rowData);\n\n      // fetch details\n      const request = new XMLHttpRequest();\n      this._requests.push(request);\n      request.timeout = this.props.timeout;\n      request.ontimeout = this.props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) return;\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n\n          if (responseJSON.status === 'OK') {\n            if (this._isMounted === true) {\n              const details = responseJSON.result;\n              this._disableRowLoaders();\n              this._onBlur();\n\n              this.setState({\n                text: this._renderDescription(rowData),\n              });\n\n              delete rowData.isLoading;\n              this.props.onPress(rowData, details);\n            }\n          } else {\n            this._disableRowLoaders();\n\n            if (this.props.autoFillOnNotFound) {\n              this.setState({\n                text: this._renderDescription(rowData),\n              });\n              delete rowData.isLoading;\n            }\n\n            if (!this.props.onNotFound) {\n              console.warn(\n                'google places autocomplete: ' + responseJSON.status,\n              );\n            } else {\n              this.props.onNotFound(responseJSON);\n            }\n          }\n        } else {\n          this._disableRowLoaders();\n\n          if (!this.props.onFail) {\n            console.warn(\n              'google places autocomplete: request could not be completed or has been aborted',\n            );\n          } else {\n            this.props.onFail(\n              'request could not be completed or has been aborted',\n            );\n          }\n        }\n      };\n\n      request.open(\n        'GET',\n        `${this.state.url}/place/details/json?` +\n          Qs.stringify({\n            key: this.props.query.key,\n            placeid: rowData.place_id,\n            language: this.props.query.language,\n            ...this.props.GooglePlacesDetailsQuery,\n          }),\n      );\n\n      request.withCredentials = this.requestShouldUseWithCredentials();\n\n      request.send();\n    } else if (rowData.isCurrentLocation === true) {\n      // display loader\n      this._enableRowLoader(rowData);\n\n      this.setState({\n        text: this._renderDescription(rowData),\n      });\n\n      delete rowData.isLoading;\n      this.getCurrentLocation();\n    } else {\n      this.setState({\n        text: this._renderDescription(rowData),\n      });\n\n      this._onBlur();\n      delete rowData.isLoading;\n      let predefinedPlace = this._getPredefinedPlace(rowData);\n\n      // sending predefinedPlace as details for predefined places\n      this.props.onPress(predefinedPlace, predefinedPlace);\n    }\n  };\n\n  _enableRowLoader = (rowData) => {\n    let rows = this.buildRowsFromResults(this._results);\n    for (let i = 0; i < rows.length; i++) {\n      if (\n        rows[i].place_id === rowData.place_id ||\n        (rows[i].isCurrentLocation === true &&\n          rowData.isCurrentLocation === true)\n      ) {\n        rows[i].isLoading = true;\n        this.setState({\n          dataSource: rows,\n        });\n        break;\n      }\n    }\n  };\n\n  _disableRowLoaders = () => {\n    if (this._isMounted === true) {\n      for (let i = 0; i < this._results.length; i++) {\n        if (this._results[i].isLoading === true) {\n          this._results[i].isLoading = false;\n        }\n      }\n\n      this.setState({\n        dataSource: this.buildRowsFromResults(this._results),\n      });\n    }\n  };\n\n  _getPredefinedPlace = (rowData) => {\n    if (rowData.isPredefinedPlace !== true) {\n      return rowData;\n    }\n\n    for (let i = 0; i < this.props.predefinedPlaces.length; i++) {\n      if (this.props.predefinedPlaces[i].description === rowData.description) {\n        return this.props.predefinedPlaces[i];\n      }\n    }\n\n    return rowData;\n  };\n\n  _filterResultsByTypes = (unfilteredResults, types) => {\n    if (types.length === 0) return unfilteredResults;\n\n    const results = [];\n    for (let i = 0; i < unfilteredResults.length; i++) {\n      let found = false;\n\n      for (let j = 0; j < types.length; j++) {\n        if (unfilteredResults[i].types.indexOf(types[j]) !== -1) {\n          found = true;\n          break;\n        }\n      }\n\n      if (found === true) {\n        results.push(unfilteredResults[i]);\n      }\n    }\n    return results;\n  };\n\n  _requestNearby = (latitude, longitude) => {\n    this._abortRequests();\n\n    if (\n      latitude !== undefined &&\n      longitude !== undefined &&\n      latitude !== null &&\n      longitude !== null\n    ) {\n      const request = new XMLHttpRequest();\n      this._requests.push(request);\n      request.timeout = this.props.timeout;\n      request.ontimeout = this.props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n\n          this._disableRowLoaders();\n\n          if (typeof responseJSON.results !== 'undefined') {\n            if (this._isMounted === true) {\n              var results = [];\n              if (this.props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n                results = this._filterResultsByTypes(\n                  responseJSON.results,\n                  this.props.filterReverseGeocodingByTypes,\n                );\n              } else {\n                results = responseJSON.results;\n              }\n\n              this.setState({\n                dataSource: this.buildRowsFromResults(results),\n              });\n            }\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!this.props.onFail)\n              console.warn(\n                'google places autocomplete: ' + responseJSON.error_message,\n              );\n            else {\n              this.props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {\n          // console.warn(\"google places autocomplete: request could not be completed or has been aborted\");\n        }\n      };\n\n      let url = '';\n      if (this.props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n        // your key must be allowed to use Google Maps Geocoding API\n        url =\n          `${this.state.url}/geocode/json?` +\n          Qs.stringify({\n            latlng: latitude + ',' + longitude,\n            key: this.props.query.key,\n            ...this.props.GoogleReverseGeocodingQuery,\n          });\n      } else {\n        url =\n          `${this.state.url}/place/nearbysearch/json?` +\n          Qs.stringify({\n            location: latitude + ',' + longitude,\n            key: this.props.query.key,\n            ...this.props.GooglePlacesSearchQuery,\n          });\n      }\n\n      request.open('GET', url);\n\n      request.withCredentials = this.requestShouldUseWithCredentials();\n\n      request.send();\n    } else {\n      this._results = [];\n      this.setState({\n        dataSource: this.buildRowsFromResults([]),\n      });\n    }\n  };\n\n  _request = (text) => {\n    this._abortRequests();\n    if (\n      this.supportedPlatform() &&\n      text &&\n      text.length >= this.props.minLength\n    ) {\n      const request = new XMLHttpRequest();\n      this._requests.push(request);\n      request.timeout = this.props.timeout;\n      request.ontimeout = this.props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n          if (typeof responseJSON.predictions !== 'undefined') {\n            if (this._isMounted === true) {\n              const results =\n                this.props.nearbyPlacesAPI === 'GoogleReverseGeocoding'\n                  ? this._filterResultsByTypes(\n                      responseJSON.predictions,\n                      this.props.filterReverseGeocodingByTypes,\n                    )\n                  : responseJSON.predictions;\n\n              this._results = results;\n              this.setState({\n                dataSource: this.buildRowsFromResults(results),\n              });\n            }\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!this.props.onFail)\n              console.warn(\n                'google places autocomplete: ' + responseJSON.error_message,\n              );\n            else {\n              this.props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {\n          // console.warn(\"google places autocomplete: request could not be completed or has been aborted\");\n        }\n      };\n      if (this.props.preProcess) {\n        text = this.props.preProcess(text);\n      }\n      request.open(\n        'GET',\n        `${this.state.url}/place/autocomplete/json?&input=` +\n          encodeURIComponent(text) +\n          '&' +\n          Qs.stringify(this.props.query),\n      );\n\n      request.withCredentials = this.requestShouldUseWithCredentials();\n\n      request.send();\n    } else {\n      this._results = [];\n      this.setState({\n        dataSource: this.buildRowsFromResults([]),\n      });\n    }\n  };\n\n  clearText() {\n    this.setState({\n      text: '',\n    });\n  }\n\n  _onChangeText = (text) => {\n    this._request(text);\n\n    this.setState({\n      text: text,\n      listViewDisplayed: this._isMounted || this.props.autoFocus,\n    });\n  };\n\n  _handleChangeText = (text) => {\n    this._onChangeText(text);\n\n    const onChangeText =\n      this.props &&\n      this.props.textInputProps &&\n      this.props.textInputProps.onChangeText;\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  };\n\n  _getRowLoader() {\n    return <ActivityIndicator animating={true} size='small' />;\n  }\n\n  _renderRowData = (rowData) => {\n    if (this.props.renderRow) {\n      return this.props.renderRow(rowData);\n    }\n\n    return (\n      <Text\n        style={[\n          this.props.suppressDefaultStyles ? {} : defaultStyles.description,\n          this.props.styles.description,\n          rowData.isPredefinedPlace\n            ? this.props.styles.predefinedPlacesDescription\n            : {},\n        ]}\n        numberOfLines={this.props.numberOfLines}\n      >\n        {this._renderDescription(rowData)}\n      </Text>\n    );\n  };\n\n  _renderDescription = (rowData) => {\n    if (this.props.renderDescription) {\n      return this.props.renderDescription(rowData);\n    }\n\n    return rowData.description || rowData.formatted_address || rowData.name;\n  };\n\n  _renderLoader = (rowData) => {\n    if (rowData.isLoading === true) {\n      return (\n        <View\n          style={[\n            this.props.suppressDefaultStyles ? {} : defaultStyles.loader,\n            this.props.styles.loader,\n          ]}\n        >\n          {this._getRowLoader()}\n        </View>\n      );\n    }\n\n    return null;\n  };\n\n  _renderRow = (rowData = {}, sectionID, rowID) => {\n    return (\n      <ScrollView\n        style={{ flex: 1 }}\n        scrollEnabled={this.props.isRowScrollable}\n        keyboardShouldPersistTaps={this.props.keyboardShouldPersistTaps}\n        horizontal={true}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n      >\n        <TouchableHighlight\n          style={{ width: WINDOW.width }}\n          onPress={() => this._onPress(rowData)}\n          underlayColor={this.props.listUnderlayColor || '#c8c7cc'}\n        >\n          <View\n            style={[\n              this.props.suppressDefaultStyles ? {} : defaultStyles.row,\n              this.props.styles.row,\n              rowData.isPredefinedPlace ? this.props.styles.specialItemRow : {},\n            ]}\n          >\n            {this._renderLoader(rowData)}\n            {this._renderRowData(rowData)}\n          </View>\n        </TouchableHighlight>\n      </ScrollView>\n    );\n  };\n\n  _renderSeparator = (sectionID, rowID) => {\n    if (rowID === this.state.dataSource.length - 1) {\n      return null;\n    }\n\n    return (\n      <View\n        key={`${sectionID}-${rowID}`}\n        style={[\n          this.props.suppressDefaultStyles ? {} : defaultStyles.separator,\n          this.props.styles.separator,\n        ]}\n      />\n    );\n  };\n\n  _onBlur = () => {\n    this.triggerBlur();\n\n    this.setState({\n      listViewDisplayed: false,\n    });\n  };\n\n  _onFocus = () => this.setState({ listViewDisplayed: true });\n\n  _renderPoweredLogo = () => {\n    if (!this._shouldShowPoweredLogo()) {\n      return null;\n    }\n\n    return (\n      <View\n        style={[\n          this.props.suppressDefaultStyles ? {} : defaultStyles.row,\n          defaultStyles.poweredContainer,\n          this.props.styles.poweredContainer,\n        ]}\n      >\n        <Image\n          style={[\n            this.props.suppressDefaultStyles ? {} : defaultStyles.powered,\n            this.props.styles.powered,\n          ]}\n          resizeMode='contain'\n          source={require('./images/powered_by_google_on_white.png')}\n        />\n      </View>\n    );\n  };\n\n  _shouldShowPoweredLogo = () => {\n    if (\n      !this.props.enablePoweredByContainer ||\n      this.state.dataSource.length === 0\n    ) {\n      return false;\n    }\n\n    for (let i = 0; i < this.state.dataSource.length; i++) {\n      let row = this.state.dataSource[i];\n\n      if (\n        !row.hasOwnProperty('isCurrentLocation') &&\n        !row.hasOwnProperty('isPredefinedPlace')\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  _renderLeftButton = () => {\n    if (this.props.renderLeftButton) {\n      return this.props.renderLeftButton();\n    }\n  };\n\n  _renderRightButton = () => {\n    if (this.props.renderRightButton) {\n      return this.props.renderRightButton();\n    }\n  };\n\n  _getFlatList = () => {\n    const keyGenerator = () => Math.random().toString(36).substr(2, 10);\n\n    if (\n      this.supportedPlatform() &&\n      (this.state.text !== '' ||\n        this.props.predefinedPlaces.length ||\n        this.props.currentLocation === true) &&\n      this.state.listViewDisplayed === true\n    ) {\n      return (\n        <FlatList\n          scrollEnabled={!this.props.disableScroll}\n          style={[\n            this.props.suppressDefaultStyles ? {} : defaultStyles.listView,\n            this.props.styles.listView,\n          ]}\n          data={this.state.dataSource}\n          keyExtractor={keyGenerator}\n          extraData={[this.state.dataSource, this.props]}\n          ItemSeparatorComponent={this._renderSeparator}\n          renderItem={({ item }) => this._renderRow(item)}\n          ListEmptyComponent={\n            this.state.text.length > this.props.minLength &&\n            this.props.listEmptyComponent\n          }\n          ListHeaderComponent={\n            this.props.renderHeaderComponent &&\n            this.props.renderHeaderComponent(this.state.text)\n          }\n          ListFooterComponent={this._renderPoweredLogo}\n          {...this.props}\n        />\n      );\n    }\n\n    return null;\n  };\n  render() {\n    let {\n      onFocus,\n      onBlur,\n      clearButtonMode,\n      InputComp,\n      ...userProps\n    } = this.props.textInputProps;\n    const TextInputComp = InputComp ? InputComp : TextInput;\n    return (\n      <View\n        style={[\n          this.props.suppressDefaultStyles ? {} : defaultStyles.container,\n          this.props.styles.container,\n        ]}\n        pointerEvents='box-none'\n      >\n        {!this.props.textInputHide && (\n          <View\n            style={[\n              this.props.suppressDefaultStyles\n                ? {}\n                : defaultStyles.textInputContainer,\n              this.props.styles.textInputContainer,\n            ]}\n          >\n            {this._renderLeftButton()}\n            <TextInputComp\n              ref='textInput'\n              editable={this.props.editable}\n              returnKeyType={this.props.returnKeyType}\n              keyboardAppearance={this.props.keyboardAppearance}\n              autoFocus={this.props.autoFocus}\n              style={[\n                this.props.suppressDefaultStyles ? {} : defaultStyles.textInput,\n                this.props.styles.textInput,\n              ]}\n              value={this.state.text}\n              placeholder={this.props.placeholder}\n              onSubmitEditing={this.props.onSubmitEditing}\n              placeholderTextColor={this.props.placeholderTextColor}\n              onFocus={\n                onFocus\n                  ? () => {\n                      this._onFocus();\n                      onFocus();\n                    }\n                  : this._onFocus\n              }\n              onBlur={\n                onBlur\n                  ? () => {\n                      this._onBlur();\n                      onBlur();\n                    }\n                  : this._onBlur\n              }\n              underlineColorAndroid={this.props.underlineColorAndroid}\n              clearButtonMode={\n                clearButtonMode ? clearButtonMode : 'while-editing'\n              }\n              {...userProps}\n              onChangeText={this._handleChangeText}\n            />\n            {this._renderRightButton()}\n          </View>\n        )}\n        {this._getFlatList()}\n        {this.props.children}\n      </View>\n    );\n  }\n}\n\nGooglePlacesAutocomplete.propTypes = {\n  autoFillOnNotFound: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  currentLocation: PropTypes.bool,\n  currentLocationLabel: PropTypes.string,\n  debounce: PropTypes.number,\n  editable: PropTypes.bool,\n  enableHighAccuracyLocation: PropTypes.bool,\n  enablePoweredByContainer: PropTypes.bool,\n  fetchDetails: PropTypes.bool,\n  filterReverseGeocodingByTypes: PropTypes.array,\n  getDefaultValue: PropTypes.func,\n  GooglePlacesDetailsQuery: PropTypes.object,\n  GooglePlacesSearchQuery: PropTypes.object,\n  GoogleReverseGeocodingQuery: PropTypes.object,\n  isRowScrollable: PropTypes.bool,\n  keyboardAppearance: PropTypes.oneOf(['default', 'light', 'dark']),\n  listEmptyComponent: PropTypes.func,\n  listUnderlayColor: PropTypes.string,\n  minLength: PropTypes.number,\n  nearbyPlacesAPI: PropTypes.string,\n  numberOfLines: PropTypes.number,\n  onFail: PropTypes.func,\n  onNotFound: PropTypes.func,\n  onPress: PropTypes.func,\n  onSubmitEditing: PropTypes.func,\n  onTimeout: PropTypes.func,\n  placeholder: PropTypes.string,\n  placeholderTextColor: PropTypes.string,\n  predefinedPlaces: PropTypes.array,\n  predefinedPlacesAlwaysVisible: PropTypes.bool,\n  query: PropTypes.object,\n  renderDescription: PropTypes.func,\n  renderLeftButton: PropTypes.func,\n  renderRightButton: PropTypes.func,\n  renderRow: PropTypes.func,\n  requestUrl: PropTypes.shape({\n    url: PropTypes.string,\n    useOnPlatform: PropTypes.oneOf(['web', 'all']),\n  }),\n  returnKeyType: PropTypes.string,\n  styles: PropTypes.object,\n  suppressDefaultStyles: PropTypes.bool,\n  textInputHide: PropTypes.bool,\n  textInputProps: PropTypes.object,\n  timeout: PropTypes.number,\n  underlineColorAndroid: PropTypes.string,\n};\n\nGooglePlacesAutocomplete.defaultProps = {\n  autoFillOnNotFound: false,\n  autoFocus: false,\n  currentLocation: false,\n  currentLocationLabel: 'Current location',\n  debounce: 0,\n  editable: true,\n  enableHighAccuracyLocation: true,\n  enablePoweredByContainer: true,\n  fetchDetails: false,\n  filterReverseGeocodingByTypes: [],\n  getDefaultValue: () => '',\n  GooglePlacesDetailsQuery: {},\n  GooglePlacesSearchQuery: {\n    rankby: 'distance',\n    type: 'restaurant',\n  },\n  GoogleReverseGeocodingQuery: {},\n  isRowScrollable: true,\n  keyboardAppearance: 'default',\n  keyboardShouldPersistTaps: 'always',\n  listViewDisplayed: 'auto',\n  minLength: 0,\n  nearbyPlacesAPI: 'GooglePlacesSearch',\n  numberOfLines: 1,\n  onFail: () => {},\n  onNotFound: () => {},\n  onSubmitEditing: () => {},\n  onPress: () => {},\n  onTimeout: () => console.warn('google places autocomplete: request timeout'),\n  placeholder: 'Search',\n  placeholderTextColor: '#A8A8A8',\n  predefinedPlaces: [],\n  predefinedPlacesAlwaysVisible: false,\n  query: {\n    key: 'missing api key',\n    language: 'en',\n    types: 'geocode',\n  },\n  returnKeyType: 'search',\n  styles: {},\n  suppressDefaultStyles: false,\n  textInputHide: false,\n  textInputProps: {},\n  timeout: 20000,\n  underlineColorAndroid: 'transparent',\n};\n\n// this function is still present in the library to be retrocompatible with version < 1.1.0\nconst create = function create(options = {}) {\n  return React.createClass({\n    render() {\n      return (\n        <GooglePlacesAutocomplete ref='GooglePlacesAutocomplete' {...options} />\n      );\n    },\n  });\n};\n\nexport { GooglePlacesAutocomplete, create };\n"]},"metadata":{},"sourceType":"script"}